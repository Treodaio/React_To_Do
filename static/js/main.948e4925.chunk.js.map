{"version":3,"sources":["components/AddTask.js","components/ActiveTask.js","components/TaskCompleted.js","components/TaskList.js","components/TaskInfo.js","components/App.js","reportWebVitals.js","index.js"],"names":["minDate","Date","toISOString","slice","AddTask","props","className","onSubmit","addTask","htmlFor","type","placeholder","id","name","value","onChange","addTaskInfo","checked","priority","min","createDate","doUntil","addInfo","ActiveTask","onClick","handleInfo","taskInfo","e","end","TaskCompleted","remove","TaskList","activeTasks","tasks","map","task","active","endTask","handleTaskInfo","doneTasks","removeTask","sortTasks","TaskInfo","timeToTask","taskAge","TODAY","now","ONE_DAY","App","state","taskName","taskPriority","taskAddInfo","singleTask","undefined","timeBetween","target","this","setState","preventDefault","checkIsTaskEmpty","tasksCopy","newID","generateIndex","length","newTaskArray","concat","clearInputs","scope","Math","floor","random","checkUniqueID","ID","some","properLength","index","findTaskID","splice","taskIndex","calcTaskAge","handleDateTimestamp","taskInMiliseconds","parse","result","toString","endDate","firstDay","getTime","element","stopPropagation","findIndex","item","how","sortByName","sortByDate","taskToSort","filter","otherTasks","sort","a","b","toLowerCase","bind","handleDone","handleRemove","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.948e4925.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../layouts/AddTask.css';\r\nconst minDate = new Date().toISOString().slice(0, 10);\r\n\r\nconst AddTask = props => {\r\n    return (\r\n        <div className=\"AddTask\">\r\n            <h1>Dodaj zadanie</h1>\r\n\r\n            <form onSubmit={props.addTask}>\r\n\r\n                <label htmlFor=\"taskIdentifier\">\r\n                    <p>Nazwa zadania: </p>\r\n\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Nazwa\"\r\n                        id=\"taskIdentifier\"\r\n                        name=\"taskName\"\r\n                        value={props.name}\r\n                        onChange={props.addTaskInfo}\r\n                    />\r\n\r\n                </label>\r\n\r\n                <label htmlFor=\"important\">\r\n\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        id=\"important\" name=\"taskPriority\"\r\n                        checked={props.priority}\r\n                        onChange={props.addTaskInfo}\r\n                    />\r\n                    <h4>Priorytet</h4>\r\n                </label>\r\n\r\n                <label htmlFor=\"startDate\" >\r\n                    <h4>Data rozpoczęcia zadania</h4>\r\n\r\n                    <input\r\n                        type=\"date\"\r\n                        min={minDate}\r\n                        id=\"startDate\"\r\n                        name=\"createDate\"\r\n                        value={props.createDate}\r\n                        onChange={props.addTaskInfo}\r\n                    />\r\n\r\n                </label>\r\n\r\n                <label htmlFor=\"finishDate\">\r\n                    <h4>Data zakończenia zadania</h4>\r\n                    <input\r\n                        type=\"date\"\r\n                        min={props.createDate}\r\n                        id=\"finishDate\"\r\n                        name=\"doUntil\"\r\n                        value={props.doUntil <= props.createDate ? props.createDate : props.doUntil}\r\n                        onChange={props.addTaskInfo}\r\n                    />\r\n                </label>\r\n\r\n                <label htmlFor=\"additionalInfo\">\r\n                    <p>Dodaj informacje na temat zadania (opcjonalne)</p>\r\n\r\n                    <textarea\r\n                        placeholder=\"Informacje\"\r\n                        id=\"additionalInfo\"\r\n                        name=\"taskAddInfo\"\r\n                        value={props.addInfo}\r\n                        onChange={props.addTaskInfo}>\r\n                    </textarea>\r\n                </label>\r\n\r\n                <button type=\"submit\">Dodaj zadanie</button>\r\n            </form>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default AddTask;","import React from 'react';\r\nconst ActiveTask = props => {\r\n    return (\r\n        <div className=\"ActiveTasks\" onClick={() => { props.handleInfo(props.taskInfo.id) }}>\r\n            <h3 className={props.taskInfo.priority ? \"priority\" : \"\"}>{props.taskInfo.name} </h3>\r\n            <h3>Termin: {props.taskInfo.doUntil}</h3>\r\n            <button onClick={(e) => { props.end(props.taskInfo.id, e) }}>OK</button>\r\n        </div>\r\n    );\r\n}\r\nexport default ActiveTask;","import React from 'react';\r\nconst TaskCompleted = props => {\r\n    return (\r\n        <div className=\"TaskCompleted\">\r\n            <h3>{props.taskInfo.name}</h3>\r\n            <h3>Termin: {props.taskInfo.doUntil}</h3>\r\n            <button onClick={() => { props.remove(props.taskInfo.id) }}>X</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskCompleted;","import React from 'react';\r\nimport ActiveTask from './ActiveTask';\r\nimport TaskCompleted from './TaskCompleted';\r\n\r\nimport '../layouts/TaskList.css';\r\n\r\nconst TaskList = props => {\r\n    const activeTasks = props.tasks.map(task => {\r\n        if (task.active) {\r\n            return <ActiveTask\r\n                key={task.id}\r\n                taskInfo={task}\r\n                end={props.endTask}\r\n                handleInfo={props.handleTaskInfo}\r\n            />\r\n        }\r\n        else return null;\r\n    })\r\n    const doneTasks = props.tasks.map(task => {\r\n        if (!task.active) {\r\n            return <TaskCompleted\r\n                key={task.id}\r\n                taskInfo={task}\r\n                remove={props.removeTask}\r\n            />\r\n        }\r\n        else return null;\r\n    })\r\n\r\n    return (\r\n        <div className=\"TaskList\">\r\n            <section>\r\n                <div className=\"sort\">\r\n                    <h1>Lista zadań do zrobienia</h1>\r\n                    <button onClick={() => props.sortTasks(true, 'name')}> A / Z</button>\r\n                    <button onClick={() => props.sortTasks(true, 'date')}> Termin</button>\r\n                </div>\r\n                {activeTasks}\r\n            </section>\r\n\r\n            <section>\r\n                <div className=\"sort\">\r\n                    <h2>Zrobione zadania</h2>\r\n                    <button onClick={() => props.sortTasks(false, 'name')}> A / Z</button>\r\n                    <button onClick={() => props.sortTasks(false, 'date')}> Termin</button>\r\n                </div>\r\n\r\n                {doneTasks}\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskList;","import '../layouts/TaskInfo.css';\r\n\r\nconst TaskInfo = props => {\r\n    const { id, createDate, addInfo } = props.task;\r\n\r\n    return (\r\n        <div className=\"TaskInfo\">\r\n            <h1>Szczegółowe informacje </h1>\r\n            <section>\r\n                <h3>Notatki</h3>\r\n                <p>{id ? addInfo : \"\"}</p>\r\n            </section>\r\n\r\n            <section>\r\n                <h3>Utworzono dnia: </h3>\r\n                <p>{createDate ? createDate : \"\"}</p>\r\n            </section>\r\n\r\n            <section>\r\n                <h3>Przydzielonego czasu: </h3>\r\n                <p>{props.timeToTask && id ? `${props.timeToTask} dni` : \"---\"}</p>\r\n            </section>\r\n\r\n            <section className=\"days\">\r\n                <h3>Dni upłynęło: </h3>\r\n                <p>{props.taskAge && id ? props.taskAge : \"---\"}</p>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskInfo;","import React from 'react';\nimport AddTask from './AddTask';\nimport TaskList from './TaskList';\nimport TaskInfo from './TaskInfo';\nimport '../layouts/App.css';\n\nconst TODAY = Date.now();\nconst ONE_DAY = 1000 * 60 * 60 * 24;\n\nclass App extends React.Component {\n  state = {\n    tasks: [\n      {\n        id: 1,\n        name: \"Spotkanie biznesowe\",\n        createDate: \"2021-03-01\",\n        doUntil: \"2021-03-11\",\n        priority: false,\n        active: true,\n        addInfo: \"Szybko zanim uschną\"\n      },\n      {\n        id: 2,\n        name: \"Opracować skuteczny plan nauki\",\n        createDate: \"2020-01-01\",\n        doUntil: \"2021-03-06\",\n        priority: true,\n        active: true,\n        addInfo: \"Aby uczyć się szybciej niż komputer\"\n      },\n      {\n        id: 6,\n        name: \"Spotkanie z przyjaciółmi\",\n        createDate: \"2020-03-04\",\n        doUntil: \"2020-03-07\",\n        priority: false,\n        active: true,\n        addInfo: \"React + Node + CSS + Express.\"\n      },\n\n      {\n        id: 5,\n        name: \"Pracować nad nowym projektem\",\n        createDate: \"2021-02-03\",\n        doUntil: \"2021-03-10\",\n        priority: true,\n        active: false,\n        addInfo: \"Projekt React\",\n      },\n    ],\n\n    taskName: \"\",\n    createDate: \"\",\n    taskPriority: false,\n    taskAddInfo: \"\",\n    doUntil: \"\",\n\n    singleTask: false,\n    taskAge: undefined,\n    timeBetween: undefined,\n  }\n\n  addTaskInfo(e) {\n    const { value, type, name } = e.target;\n\n    if (type === \"checkbox\") {\n      this.setState({\n        [name]: e.target.checked,\n      })\n    }\n\n    else {\n      this.setState({\n        [name]: value,\n      })\n    }\n  }\n\n  addTask(e) {\n    e.preventDefault();\n    if (this.checkIsTaskEmpty()) return;\n\n    const tasksCopy = [...this.state.tasks];\n    let newID = this.generateIndex(tasksCopy.length);\n\n    if (!newID) {\n      newID = this.generateIndex(tasksCopy.length);\n    } else {\n      const newTaskArray = tasksCopy.concat({\n        id: newID,\n        name: this.state.taskName,\n        createDate: this.state.createDate,\n        doUntil: this.state.doUntil,\n        priority: this.state.taskPriority,\n        active: true,\n        addInfo: this.state.taskAddInfo,\n      })\n\n      if (newTaskArray.length !== this.state.tasks.length) {\n        this.setState({\n          tasks: newTaskArray,\n        })\n        this.clearInputs();\n      }\n    }\n  }\n\n  checkIsTaskEmpty() { if (this.state.taskName === \"\" || this.state.createDate === \"\") return true; }\n\n  generateIndex(scope) {\n    const newID = Math.floor(Math.random() * (scope + 100));\n    const passTest = this.checkUniqueID(newID);\n    if (passTest) { return false; }\n    else return newID;\n  }\n\n  checkUniqueID(ID) { return this.state.tasks.some(task => task.id === ID); }\n\n  clearInputs() { this.setState({ taskName: \"\", createDate: \"\", doUntil: \"\", taskPriority: false, taskAddInfo: \"\", }) }\n\n  handleRemove(ID) {\n    const tasksCopy = [...this.state.tasks];\n    const properLength = this.state.tasks.length - 1;\n    const index = this.findTaskID(ID);\n\n    tasksCopy.splice(index, 1);\n\n    if (tasksCopy.length === properLength) { this.setState({ tasks: tasksCopy, }) }\n  }\n\n  handleTaskInfo(ID) {\n    const taskIndex = this.findTaskID(ID);\n    let singleTask = null;\n\n    if (taskIndex > -1) { singleTask = { ...this.state.tasks[taskIndex] }; }\n\n    this.setState({ singleTask })\n\n    if (singleTask) {\n      this.calcTaskAge(singleTask.createDate);\n      this.handleDateTimestamp(singleTask.createDate, singleTask.doUntil);\n    }\n  }\n\n  calcTaskAge(createDate) {\n    const taskInMiliseconds = Date.parse(createDate);\n    const result = Math.floor((TODAY - taskInMiliseconds) / ONE_DAY);\n    result.toString();\n\n    if (result !== '0') {\n      this.setState({ taskAge: result, })\n    } else { this.setState({ taskAge: undefined, }) }\n  }\n\n  handleDateTimestamp(createDate, endDate) {\n    const firstDay = new Date(createDate).getTime();\n    const lastDay = new Date(endDate).getTime();\n    let timeBetween = (lastDay - firstDay) / ONE_DAY;\n\n    if (timeBetween === 0) { timeBetween = 'Do wykonania dzisiaj' }\n    timeBetween = timeBetween.toString();\n    this.setState({ timeBetween });\n  }\n\n  handleDone(ID, e) {\n    const index = this.findTaskID(ID);\n    const tasks = [...this.state.tasks];\n\n    let element = {\n      ...this.state.tasks[index],\n      active: false,\n    };\n    tasks[index] = element;\n\n    this.setState({ tasks, })\n\n    if (this.state.singleTask) { this.setState({ singleTask: \"\", }) }\n    e.stopPropagation();\n  }\n\n  findTaskID(ID) { return this.state.tasks.findIndex(item => item.id === ID); }\n\n\n  sortTasks(type, how) {\n    if (type && how === 'name') { this.sortByName(true) };\n    if (type && how === 'date') { this.sortByDate(true) };\n    if (!type && how === 'name') { this.sortByName(false) };\n    if (!type && how === 'date') { this.sortByDate(false) };\n  }\n\n  sortByName(type) {\n    let taskToSort = this.state.tasks.filter(task => task.active === type);\n    const otherTasks = this.state.tasks.filter(task => task.active !== type);\n\n    if (taskToSort.length > 2) {\n      taskToSort.sort((a, b) => {\n        a = a.name.toLowerCase();\n        b = b.name.toLowerCase();\n        if (a < b) return -1;\n        if (a > b) return 1;\n        else return 0;\n      })\n    }\n    const tasks = taskToSort.concat(otherTasks);\n    if (tasks.length >= taskToSort.length) { this.setState({ tasks }); }\n  }\n  sortByDate(type) {\n    let taskToSort = this.state.tasks.filter(task => task.active === type);\n    const otherTasks = this.state.tasks.filter(task => task.active !== type);\n\n    if (taskToSort.length > 2) {\n      taskToSort.sort((a, b) => {\n        if (a.doUntil < b.doUntil) return -1;\n        if (a.doUntil > b.doUntil) return 1;\n        else return 0;\n      })\n    }\n    const tasks = taskToSort.concat(otherTasks);\n    if (tasks.length >= taskToSort.length) { this.setState({ tasks }); }\n  }\n\n  render() {\n    const { taskName, createDate, doUntil, taskPriority,\n      taskAddInfo, singleTask, taskAge, timeBetween } = this.state;\n\n    return (\n      <div className=\"App\">\n        <AddTask\n          addTask={this.addTask.bind(this)}\n          addTaskInfo={this.addTaskInfo.bind(this)}\n\n          name={taskName}\n          createDate={createDate}\n          doUntil={doUntil}\n          priority={taskPriority}\n          addInfo={taskAddInfo}\n        />\n\n        <TaskList\n          tasks={this.state.tasks}\n          endTask={this.handleDone.bind(this)}\n          removeTask={this.handleRemove.bind(this)}\n          handleTaskInfo={this.handleTaskInfo.bind(this)}\n          sortTasks={this.sortTasks.bind(this)}\n        />\n        <TaskInfo\n          task={singleTask}\n          taskAge={taskAge}\n          timeToTask={timeBetween}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './layouts/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}